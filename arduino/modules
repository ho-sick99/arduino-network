//빵판에 전기들어오는게 없어서 아두이노 5v랑 빵판의 +연결, 아두이노 gnd와 빵판의 -연결 했음
//선 왓다갓다 바꿔끼웠음. 동작 동일함

#include <SoftwareSerial.h> //아두이노 2개 연결하기 위한 라이브러리
#include <Servo.h> //서보모터 라이브라리
#include <pitches.h> //음높낮이 라이브러리

//아두이노 2개 연결 핀
const int RxPin = 5;
const int TxPin = 4;

//RGB led 연결 핀
int ledRed = 9;//red 
int ledGreen = 8; //green

//가스 센서 3개 각각의 연결 핀
int gas1=A0; //가스센서 1번 연결 핀
int gas2=A1; //가스센서 2번 연결 핀
int gas3=A2; //가스센서 3번 연결 핀

//피에조 부저 연결 핀
int buzzer = 7;

//피에조 멜로디
int melody[]={};//안전멜로디
int melody[]={};//위험멜로디

// ??? 모터 연결 핀 
int motor = 2;

//서보 모터 변수 및 상태 변수 svState;
Servo sv;
int svState = 0;

//AC모터 변수 및 상태 변수 acState
int acState = 0;

//delay()는 코드 전체를 멈추는 거라 delay(지정시간) 동안 다른 코드가 동작을 못함.
//이를 해결하기 위해 (동시동작을 가능하게 하기 위해) millis()함수 사용
//millis()는 함수 실행때의 시간을 기록하는 함수임.  현재시간-과거시간=지정시간 으로 사용할 수 있음
//=> 과거시간을 업데이트하면서 delay()처럼 지정시간 이후 동작을 지정할 수 있음. 
unsigned long time_previous, time_current;

void setup() {
  Serial.begin(9600);       // 시리얼 통신 초기화. 
  pinMode(buzzer,OUTPUT);   // 피에조는 출력센서
  pinMode(gas1, INPUT);     // 가스 1,2,3은 입력센서
  pinMode(gas2, INPUT); 
  pinMode(gas3, INPUT);
  pinMode(ledRed, OUTPUT);  // led는 출력센서
  pinMode(ledGreen, OUTPUT);
  time_previous=millis(); //현재시간을 이전 시간
}

void loop() {
  //가스센서 항시 감지 (시리얼 모니터 에서 확인) 
  Serial.print("gas1 : ");
  Serial.print(analogRead(gas1)); //디폴트 : 약 50~60, 입김불면 90~95
  Serial.print(", gas2 : ");      //디폴트 : 약 40~50, 입김불면 80~85
  Serial.print(analogRead(gas2)); //디폴트 : 약 55~65, 입김불면 90~95 
  Serial.print(", gas3 : ");
  Serial.println(analogRead(gas3));
  //delay(100);

  //루프 돌 떄마다 현재시간 갱신
  time_currnet = millis();

  //센서값 탐지 -> 센서 3개중 한개라도 100이상이면 if문 내부 동작
  if(analogRead(gas1)>100 || analogRead(gas2)>100 || analogRead(gas3)>100){ //기준치 100으로 설정(적당히 바꾸세요)
    svState++;

    if(time_current - time_previous >= 100){ 
      time_previous = time_current; 
    }
  }
  else{
    svState--;
    if(time_current - time_previous >= 100){ 
      time_previous = time_current; 
    }
    if(svState<0){
      svState=0;
      if(time_current - time_previous >= 100){ 
      time_previous = time_current; 
      }
    }
  }

  switch(svState){
    case 0:
            Serial.println("현재 안전합니다.");
            //피에조 작동
            tone(buzzer,32.7032,500); 
            tone(buzzer,41.2034,500); 
            tone(buzzer,48.9994,500); 
            noTone();

            //카메라촬영 
            //사진 이미지 넘기기
            //센서값 넘기기
            //모터 작동
            digitalWrite(ledGreen,HIGH);
            digitalWrite(ledRed,LOW);
  
            break;
    case 1:
            Serial.println("경고!!! 실내 흡연자 발생!!");
            //피에조 작동
            tone(buzzer,7000,1500); 

            digitalWrite(ledRed,HIGH);
            digitalWrite(ledGreen,LOW);
            break;
    default:
            Serial.print("something wrong");

  }

}
